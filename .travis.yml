# Define the language used
language: node_js
sudo: required
dist: trusty
# Multiple versions of the language here
node_js:
  - '6.10.0'

# Install dependencies
before_install:
  - npm install -g @angular/cli
  - npm install
  # - sudo apt-get install -y libappindicator1 fonts-liberation
  # - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  # - sudo dpkg -i google-chrome*.deb
  # - export CHROME_BIN=/usr/bin/google-chrome
  # - export DISPLAY=:99.0
  # - sh -e /etc/init.d/xvfb start
  - ng build -prod --suppress-sizes=true

# Setup the ARM environment, then build and run your Dockerfile
install:
  # - sudo apt-get update
  # - sudo apt-get install -y --no-install-recommends qemu-user-static binfmt-support
  # - sudo update-binfmts --enable qemu-arm
  # - sudo update-binfmts --display qemu-arm
  - docker build -t $DOCKER_IMAGE:$DOCKER_IMAGE_VERSION .
  - docker images

# Install required packages for testing scripts
before_script:

cache:
  directories:
    - $HOME/node_modules
  # - "export CHROME_BIN=chromium-browser"
  # - "export DISPLAY=:99.0"
  # - "sh -e /etc/init.d/xvfb start"
  # - sleep 3 # give xvfb some time to start

# Define your own tests here
script:
  # - python tests.py

# After success, push your images to the registry
after_success:
  - if [ "$TRAVIS_BRANCH" == "develop" ]; then
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push $DOCKER_IMAGE:$DOCKER_IMAGE_VERSION;
    fi
